CREATE DATABASE Drive2_db;
\c Drive2_db_db;

--Create the Tables--
-- User Table
CREATE TABLE users (
    user_id SERIAL PRIMARY KEY,
    username VARCHAR(50) UNIQUE NOT NULL,
    password VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL
);

-- Vehicle Data Table
CREATE TABLE vehicles (
    vehicle_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    car_model VARCHAR(100),
    license_plate VARCHAR(20) UNIQUE,
    color VARCHAR(50)
);

-- Car Model Information Table
CREATE TABLE car_models (
    model_id SERIAL PRIMARY KEY,
    model_name VARCHAR(100) UNIQUE NOT NULL,
    manufacturer VARCHAR(100),
    year_of_manufacture INT
);

CREATE TABLE travel_logs (
    log_id SERIAL PRIMARY KEY,
    user_id INT REFERENCES users(user_id),
    start_latitude DECIMAL(9,6) NOT NULL,
    start_longitude DECIMAL(9,6) NOT NULL,
    start_point_name VARCHAR(100) NOT NULL,
    end_latitude DECIMAL(9,6) NOT NULL,
    end_longitude DECIMAL(9,6) NOT NULL,
    end_point_name VARCHAR(100) NOT NULL,
    start_time TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    end_time TIMESTAMPTZ,
    travel_time INTERVAL GENERATED ALWAYS AS (end_time - start_time) STORED
);

CREATE TABLE matching_data (
    match_id SERIAL PRIMARY KEY,
    user_id_person1 INT REFERENCES users(user_id),
    user_id_person2 INT REFERENCES users(user_id),
    match_time TIMESTAMPTZ DEFAULT CURRENT_TIMESTAMP,
    start_point_name VARCHAR(100) NOT NULL,
    end_point_name VARCHAR(100) NOT NULL,
    status VARCHAR(50) NOT NULL,
    driver_name VARCHAR(100) NOT NULL
);


-- add table Cost for calculate based on car_model, fuel , distance 